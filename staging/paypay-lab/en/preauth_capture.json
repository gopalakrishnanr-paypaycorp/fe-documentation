{
   "identifier":"go_shipment",
   "name":"PreAuth & Capture",
   "points":[
      {
         "actwatcher":0,
         "endpoints":"/v2/payments/preauthorize",
         "method":"POST",
         "model":{
            "amount":1000,
            "merchantPaymentId":"mpId",
            "requestedAt":"",
            "userAuthorizationId":""
         },
         "name":"preAuthorizePayment",
         "response":{
            "model1":{
               
            },
            "model2":{
               
            }
         },
         "sampleInput":{
            "amount":"number",
            "merchantPaymentId":"string",
            "requestedAt":"number",
            "userAuthorizationId":"string"
         },
         "scenario":{
            "model1":{
               "question":"I should be able to create a payment authorization",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantPaymentId",
                     "inputType":"text",
                     "label":"MerchantPaymentId",
                     "model":"merchantPaymentId",
                     "placeholder":"MerchantPaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Greater than one required",
                     "id":"amount",
                     "inputType":"number",
                     "label":"Amount",
                     "model":"amount",
                     "placeholder":"Amount",
                     "type":"input",
                     "validation":{
                        "match":"^((?!(0))[0-9]{1,10})$",
                        "type":"regex"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 10 charachters required",
                     "id":"requestedAt",
                     "inputType":"text",
                     "label":"RequestedAt",
                     "model":"requestedAt",
                     "placeholder":"RequestedAt",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":10,
                           "max":10
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"userAuthorizationId",
                     "inputType":"text",
                     "label":"UserAuthorizationId",
                     "model":"userAuthorizationId",
                     "placeholder":"UserAuthorizationId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  }
               ]
            },
            "model2":{
               "question":"I should be able to see error while accessing API with incorrect token",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantPaymentId",
                     "inputType":"text",
                     "label":"MerchantPaymentId",
                     "model":"merchantPaymentId",
                     "placeholder":"MerchantPaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Greater than one required",
                     "id":"amount",
                     "inputType":"number",
                     "label":"Amount",
                     "model":"amount",
                     "placeholder":"Amount",
                     "type":"input",
                     "validation":{
                        "match":"^((?!(0))[0-9]{1,10})$",
                        "type":"regex"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 10 charachters required",
                     "id":"requestedAt",
                     "inputType":"text",
                     "label":"RequestedAt",
                     "model":"requestedAt",
                     "placeholder":"RequestedAt",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":10,
                           "max":10
                        },
                        "type":"length"
                     }
                  }
               ]
            }
         }
      },
      {
         "actwatcher":0,
         "endpoints":"/v2/payments/{merchantPaymentId}",
         "method":"GET",
         "model":{
            "isAuthorzation":true,
            "merchantPaymentId":""
         },
         "name":"pay-getPayments",
         "response":{
            "model1":{
               
            },
            "model2":{
               
            },
            "model3":{
               
            },
            "model4":{
               
            }
         },
         "sampleInput":{
            "merchantPaymentId":"string"
         },
         "scenario":{
            "model1":{
               "question":"I should be able to see payment details after creating a payment authorization",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantPaymentId",
                     "inputType":"text",
                     "label":"MerchantPaymentId",
                     "model":"merchantPaymentId",
                     "placeholder":"MerchantPaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  }
               ]
            },
            "model2":{
               "question":"I should be able to get payment details after capturing the payment authorization for amount higher than merchant threshold",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantPaymentId",
                     "inputType":"text",
                     "label":"MerchantPaymentId",
                     "model":"merchantPaymentId",
                     "placeholder":"MerchantPaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_radio",
                     "group":[
                        {
                           "label":"True",
                           "value":true
                        },
                        {
                           "label":"False",
                           "value":false
                        }
                     ],
                     "hint":"",
                     "id":"isAuthorzation",
                     "inputType":"radio",
                     "label":"Authorzation",
                     "model":"isAuthorzation",
                     "placeholder":"",
                     "type":"radio",
                     "validation":{
                        "match":"",
                        "type":""
                     }
                  }
               ]
            },
            "model3":{
               "question":"I should be able to get payment details after cancelling a payment authorization",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantPaymentId",
                     "inputType":"text",
                     "label":"MerchantPaymentId",
                     "model":"merchantPaymentId",
                     "placeholder":"MerchantPaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_radio",
                     "group":[
                        {
                           "label":"True",
                           "value":true
                        },
                        {
                           "label":"False",
                           "value":false
                        }
                     ],
                     "hint":"",
                     "id":"isAuthorzation",
                     "inputType":"radio",
                     "label":"Authorzation",
                     "model":"isAuthorzation",
                     "placeholder":"",
                     "type":"radio",
                     "validation":{
                        "match":"",
                        "type":""
                     }
                  }
               ]
            },
            "model4":{
               "question":"I should not be able to access with incorrect token",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantPaymentId",
                     "inputType":"text",
                     "label":"MerchantPaymentId",
                     "model":"merchantPaymentId",
                     "placeholder":"MerchantPaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_radio",
                     "group":[
                        {
                           "label":"True",
                           "value":true
                        },
                        {
                           "label":"False",
                           "value":false
                        }
                     ],
                     "hint":"",
                     "id":"isAuthorzation",
                     "inputType":"radio",
                     "label":"Authorzation",
                     "model":"isAuthorzation",
                     "placeholder":"",
                     "type":"radio",
                     "validation":{
                        "match":"",
                        "type":""
                     }
                  }
               ]
            }
         }
      },
      {
         "actwatcher":0,
         "endpoints":"/v2/payments/{merchantPaymentId}",
         "method":"DEL",
         "model":{
            "isAuthorzation":true,
            "merchantPaymentId":""
         },
         "name":"pay-deletePayments",
         "response":{
            "model1":{
               
            },
            "model2":{
               
            }
         },
         "sampleInput":{
            "merchantPaymentId":"string"
         },
         "scenario":{
            "model1":{
               "question":"I should be able to cancel a payment authorization",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 19 charachters required",
                     "id":"merchantPaymentId",
                     "inputType":"text",
                     "label":"MerchantPaymentId",
                     "model":"merchantPaymentId",
                     "placeholder":"Merchant Payment Id",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  }
               ]
            },
            "model2":{
               "question":"I should be able to see error while accessing API with incorrect token",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 19 charachters required",
                     "id":"merchantPaymentId",
                     "inputType":"text",
                     "label":"MerchantPaymentId",
                     "model":"merchantPaymentId",
                     "placeholder":"Merchant Payment Id",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_radio",
                     "group":[
                        {
                           "label":"True",
                           "value":true
                        },
                        {
                           "label":"False",
                           "value":false
                        }
                     ],
                     "hint":"",
                     "id":"isAuthorzation",
                     "inputType":"radio",
                     "label":"Authorzation",
                     "model":"isAuthorzation",
                     "placeholder":"",
                     "type":"radio",
                     "validation":{
                        "match":"",
                        "type":""
                     }
                  }
               ]
            }
         }
      },
      {
         "actwatcher":0,
         "endpoints":"/v2/payments/capture",
         "method":"POST",
         "model":{
            "amount":1000,
            "isAuthorzation":true,
            "merchantCaptureId":"",
            "merchantPaymentId":"",
            "orderDescription":"",
            "requestedAt":""
         },
         "name":"postPaymentCapture",
         "response":{
            "model1":{
               
            },
            "model2":{
               
            },
            "model3":{
               
            },
            "model4":{
               
            },
            "model5":{
               
            },
            "model6":{
               
            },
            "model7":{
               
            },
            "model8":{
               
            },
            "model9":{
               
            },
            "model10":{
               
            }
         },
         "sampleInput":{
            "amount":"number",
            "merchantCaptureId":"string",
            "merchantPaymentId":"string",
            "orderDescription":"string",
            "requestedAt":"number"
         },
         "scenario":{
            "model1":{
               "question":"I should be able to capture the payment authorized for amount equals to merchant's threshold value",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 999,999 charachters required",
                     "id":"merchantPaymentId",
                     "inputType":"text",
                     "label":"Merchant PaymentId",
                     "model":"merchantPaymentId",
                     "placeholder":"MerchantPaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Greater than one required",
                     "id":"amount",
                     "inputType":"number",
                     "label":"Amount",
                     "model":"amount",
                     "placeholder":"Amount",
                     "type":"input",
                     "validation":{
                        "match":"^((?!(0))[0-9]{1,10})$",
                        "type":"regex"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantCaptureId",
                     "inputType":"number",
                     "label":"Merchant CaptureId",
                     "model":"merchantCaptureId",
                     "placeholder":"MerchantCaptureId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 16 charachters required",
                     "id":"requestedAt",
                     "inputType":"text",
                     "label":"RequestedAt",
                     "model":"requestedAt",
                     "placeholder":"RequestedAt",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":16
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Maximum 255 charachters allowed",
                     "id":"orderDescription",
                     "inputType":"text",
                     "label":"Description",
                     "model":"orderDescription",
                     "placeholder":"Order Description",
                     "type":"input",
                     "validation":{
                        "match":{
                           "max":255
                        },
                        "type":"length"
                     }
                  }
               ]
            },
            "model2":{
               "question":"I should be able to capture the payment authorized for amount less than merchant's threshold value ",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 999,999 charachters required",
                     "id":"merchantPaymentId",
                     "inputType":"text",
                     "label":"Merchant PaymentId",
                     "model":"merchantPaymentId",
                     "placeholder":"MerchantPaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Greater than one required",
                     "id":"amount",
                     "inputType":"number",
                     "label":"Amount",
                     "model":"amount",
                     "placeholder":"Amount",
                     "type":"input",
                     "validation":{
                        "match":"^((?!(0))[0-9]{1,10})$",
                        "type":"regex"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantCaptureId",
                     "inputType":"number",
                     "label":"Merchant CaptureId",
                     "model":"merchantCaptureId",
                     "placeholder":"MerchantCaptureId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 16 charachters required",
                     "id":"requestedAt",
                     "inputType":"text",
                     "label":"RequestedAt",
                     "model":"requestedAt",
                     "placeholder":"RequestedAt",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":16
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Maximum 255 charachters allowed",
                     "id":"orderDescription",
                     "inputType":"text",
                     "label":"Description",
                     "model":"orderDescription",
                     "placeholder":"Order Description",
                     "type":"input",
                     "validation":{
                        "match":{
                           "max":255
                        },
                        "type":"length"
                     }
                  }
               ]
            },
            "model3":{
               "question":"I should be able to capture the payment authorized for amount higher than merchant threshold value",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 999,999 charachters required",
                     "id":"merchantPaymentId",
                     "inputType":"text",
                     "label":"Merchant PaymentId",
                     "model":"merchantPaymentId",
                     "placeholder":"MerchantPaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Greater than one required",
                     "id":"amount",
                     "inputType":"number",
                     "label":"Amount",
                     "model":"amount",
                     "placeholder":"Amount",
                     "type":"input",
                     "validation":{
                        "match":"^((?!(0))[0-9]{1,10})$",
                        "type":"regex"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantCaptureId",
                     "inputType":"number",
                     "label":"Merchant CaptureId",
                     "model":"merchantCaptureId",
                     "placeholder":"MerchantCaptureId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 16 charachters required",
                     "id":"requestedAt",
                     "inputType":"text",
                     "label":"RequestedAt",
                     "model":"requestedAt",
                     "placeholder":"RequestedAt",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":16
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Maximum 255 charachters allowed",
                     "id":"orderDescription",
                     "inputType":"text",
                     "label":"Description",
                     "model":"orderDescription",
                     "placeholder":"Order Description",
                     "type":"input",
                     "validation":{
                        "match":{
                           "max":255
                        },
                        "type":"length"
                     }
                  }
               ]
            },
            "model4":{
               "question":"I should not be able to capture already captured acquiring order for amount higher than merchant's threshold",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 999,999 charachters required",
                     "id":"merchantPaymentId",
                     "inputType":"text",
                     "label":"Merchant PaymentId",
                     "model":"merchantPaymentId",
                     "placeholder":"MerchantPaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Greater than one required",
                     "id":"amount",
                     "inputType":"number",
                     "label":"Amount",
                     "model":"amount",
                     "placeholder":"Amount",
                     "type":"input",
                     "validation":{
                        "match":"^((?!(0))[0-9]{1,10})$",
                        "type":"regex"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantCaptureId",
                     "inputType":"number",
                     "label":"Merchant CaptureId",
                     "model":"merchantCaptureId",
                     "placeholder":"MerchantCaptureId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 16 charachters required",
                     "id":"requestedAt",
                     "inputType":"text",
                     "label":"RequestedAt",
                     "model":"requestedAt",
                     "placeholder":"RequestedAt",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":16
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Maximum 255 charachters allowed",
                     "id":"orderDescription",
                     "inputType":"text",
                     "label":"Description",
                     "model":"orderDescription",
                     "placeholder":"Order Description",
                     "type":"input",
                     "validation":{
                        "match":{
                           "max":255
                        },
                        "type":"length"
                     }
                  }
               ]
            },
            "model5":{
               "question":"I should not be able to capture already captured acquiring order for amount less than merchant's threshold",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 999,999 charachters required",
                     "id":"merchantPaymentId",
                     "inputType":"text",
                     "label":"Merchant PaymentId",
                     "model":"merchantPaymentId",
                     "placeholder":"MerchantPaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Greater than one required",
                     "id":"amount",
                     "inputType":"number",
                     "label":"Amount",
                     "model":"amount",
                     "placeholder":"Amount",
                     "type":"input",
                     "validation":{
                        "match":"^((?!(0))[0-9]{1,10})$",
                        "type":"regex"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantCaptureId",
                     "inputType":"number",
                     "label":"Merchant CaptureId",
                     "model":"merchantCaptureId",
                     "placeholder":"MerchantCaptureId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 16 charachters required",
                     "id":"requestedAt",
                     "inputType":"text",
                     "label":"RequestedAt",
                     "model":"requestedAt",
                     "placeholder":"RequestedAt",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":16
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Maximum 255 charachters allowed",
                     "id":"orderDescription",
                     "inputType":"text",
                     "label":"Description",
                     "model":"orderDescription",
                     "placeholder":"Order Description",
                     "type":"input",
                     "validation":{
                        "match":{
                           "max":255
                        },
                        "type":"length"
                     }
                  }
               ]
            },
            "model6":{
               "question":"I should not be able to capture already captured acquiring order for amount equal to merchant's threshold",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 999,999 charachters required",
                     "id":"merchantPaymentId",
                     "inputType":"text",
                     "label":"Merchant PaymentId",
                     "model":"merchantPaymentId",
                     "placeholder":"MerchantPaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Greater than one required",
                     "id":"amount",
                     "inputType":"number",
                     "label":"Amount",
                     "model":"amount",
                     "placeholder":"Amount",
                     "type":"input",
                     "validation":{
                        "match":"^((?!(0))[0-9]{1,10})$",
                        "type":"regex"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantCaptureId",
                     "inputType":"number",
                     "label":"Merchant CaptureId",
                     "model":"merchantCaptureId",
                     "placeholder":"MerchantCaptureId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 16 charachters required",
                     "id":"requestedAt",
                     "inputType":"text",
                     "label":"RequestedAt",
                     "model":"requestedAt",
                     "placeholder":"RequestedAt",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":16
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Maximum 255 charachters allowed",
                     "id":"orderDescription",
                     "inputType":"text",
                     "label":"Description",
                     "model":"orderDescription",
                     "placeholder":"Order Description",
                     "type":"input",
                     "validation":{
                        "match":{
                           "max":255
                        },
                        "type":"length"
                     }
                  }
               ]
            },
            "model7":{
               "question":"I should not be able to capture the payment for the expired payment preauth for amount equals to merchant threshold value",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 999,999 charachters required",
                     "id":"merchantPaymentId",
                     "inputType":"text",
                     "label":"Merchant PaymentId",
                     "model":"merchantPaymentId",
                     "placeholder":"MerchantPaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Greater than one required",
                     "id":"amount",
                     "inputType":"number",
                     "label":"Amount",
                     "model":"amount",
                     "placeholder":"Amount",
                     "type":"input",
                     "validation":{
                        "match":"^((?!(0))[0-9]{1,10})$",
                        "type":"regex"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantCaptureId",
                     "inputType":"number",
                     "label":"Merchant CaptureId",
                     "model":"merchantCaptureId",
                     "placeholder":"MerchantCaptureId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 16 charachters required",
                     "id":"requestedAt",
                     "inputType":"text",
                     "label":"RequestedAt",
                     "model":"requestedAt",
                     "placeholder":"RequestedAt",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":16
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Maximum 255 charachters allowed",
                     "id":"orderDescription",
                     "inputType":"text",
                     "label":"Description",
                     "model":"orderDescription",
                     "placeholder":"Order Description",
                     "type":"input",
                     "validation":{
                        "match":{
                           "max":255
                        },
                        "type":"length"
                     }
                  }
               ]
            },
            "model8":{
               "question":"I should not be able to capture the payment for the expired payment preauth for amount less than merchant threshold value",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 999,999 charachters required",
                     "id":"merchantPaymentId",
                     "inputType":"text",
                     "label":"Merchant PaymentId",
                     "model":"merchantPaymentId",
                     "placeholder":"MerchantPaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Greater than one required",
                     "id":"amount",
                     "inputType":"number",
                     "label":"Amount",
                     "model":"amount",
                     "placeholder":"Amount",
                     "type":"input",
                     "validation":{
                        "match":"^((?!(0))[0-9]{1,10})$",
                        "type":"regex"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantCaptureId",
                     "inputType":"number",
                     "label":"Merchant CaptureId",
                     "model":"merchantCaptureId",
                     "placeholder":"MerchantCaptureId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 16 charachters required",
                     "id":"requestedAt",
                     "inputType":"text",
                     "label":"RequestedAt",
                     "model":"requestedAt",
                     "placeholder":"RequestedAt",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":16
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Maximum 255 charachters allowed",
                     "id":"orderDescription",
                     "inputType":"text",
                     "label":"Description",
                     "model":"orderDescription",
                     "placeholder":"Order Description",
                     "type":"input",
                     "validation":{
                        "match":{
                           "max":255
                        },
                        "type":"length"
                     }
                  }
               ]
            },
            "model9":{
               "question":"I should not be able to capture the payment for the expired payment preauth for amount greater than merchant threshold value",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 999,999 charachters required",
                     "id":"merchantPaymentId",
                     "inputType":"text",
                     "label":"Merchant PaymentId",
                     "model":"merchantPaymentId",
                     "placeholder":"MerchantPaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Greater than one required",
                     "id":"amount",
                     "inputType":"number",
                     "label":"Amount",
                     "model":"amount",
                     "placeholder":"Amount",
                     "type":"input",
                     "validation":{
                        "match":"^((?!(0))[0-9]{1,10})$",
                        "type":"regex"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantCaptureId",
                     "inputType":"number",
                     "label":"Merchant CaptureId",
                     "model":"merchantCaptureId",
                     "placeholder":"MerchantCaptureId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 16 charachters required",
                     "id":"requestedAt",
                     "inputType":"text",
                     "label":"RequestedAt",
                     "model":"requestedAt",
                     "placeholder":"RequestedAt",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":16
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Maximum 255 charachters allowed",
                     "id":"orderDescription",
                     "inputType":"text",
                     "label":"Description",
                     "model":"orderDescription",
                     "placeholder":"Order Description",
                     "type":"input",
                     "validation":{
                        "match":{
                           "max":255
                        },
                        "type":"length"
                     }
                  }
               ]
            },
            "model10":{
               "question":"I should be able to see error while accessing API with incorrect token",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 999,999 charachters required",
                     "id":"merchantPaymentId",
                     "inputType":"text",
                     "label":"Merchant PaymentId",
                     "model":"merchantPaymentId",
                     "placeholder":"MerchantPaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Greater than one required",
                     "id":"amount",
                     "inputType":"number",
                     "label":"Amount",
                     "model":"amount",
                     "placeholder":"Amount",
                     "type":"input",
                     "validation":{
                        "match":"^((?!(0))[0-9]{1,10})$",
                        "type":"regex"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantCaptureId",
                     "inputType":"number",
                     "label":"Merchant CaptureId",
                     "model":"merchantCaptureId",
                     "placeholder":"MerchantCaptureId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 16 charachters required",
                     "id":"requestedAt",
                     "inputType":"text",
                     "label":"RequestedAt",
                     "model":"requestedAt",
                     "placeholder":"RequestedAt",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":16
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Maximum 255 charachters allowed",
                     "id":"orderDescription",
                     "inputType":"text",
                     "label":"Description",
                     "model":"orderDescription",
                     "placeholder":"Order Description",
                     "type":"input",
                     "validation":{
                        "match":{
                           "max":255
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_radio",
                     "group":[
                        {
                           "label":"True",
                           "value":true
                        },
                        {
                           "label":"False",
                           "value":false
                        }
                     ],
                     "hint":"",
                     "id":"isAuthorzation",
                     "inputType":"radio",
                     "label":"Authorzation",
                     "model":"isAuthorzation",
                     "placeholder":"",
                     "type":"radio",
                     "validation":{
                        "match":"",
                        "type":""
                     }
                  }
               ]
            }
         }
      },
      {
         "actwatcher":0,
         "endpoints":"/v2/payments/preauthorize/revert",
         "method":"POST",
         "model":{
            "isAuthorzation":true,
            "merchantRevertId":"",
            "paymentId":"",
            "requestedAt":""
         },
         "name":"postRevertPreauthorizePayments",
         "response":{
            "model1":{
               
            },
            "model2":{
               
            },
            "model3":{
               
            }
         },
         "sampleInput":{
            "merchantRevertId":"string",
            "paymentId":"string",
            "requestedAt":"number"
         },
         "scenario":{
            "model1":{
               "question":"I should be able to revert a payment authorization",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 999,999 charachters required",
                     "id":"merchantRevertId",
                     "inputType":"text",
                     "label":"Merchant RevertId",
                     "model":"merchantRevertId",
                     "placeholder":"MerchantRevertId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"paymentId",
                     "inputType":"number",
                     "label":"PaymentId",
                     "model":"paymentId",
                     "placeholder":"PaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 10 charachters required",
                     "id":"requestedAt",
                     "inputType":"text",
                     "label":"RequestedAt",
                     "model":"requestedAt",
                     "placeholder":"RequestedAt",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":10,
                           "max":10
                        },
                        "type":"length"
                     }
                  }
               ]
            },
            "model2":{
               "question":"I should not be able to revert a payment authorization after the payment is captured for amount equals to merchant's threshold value",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 999,999 charachters required",
                     "id":"merchantRevertId",
                     "inputType":"text",
                     "label":"Merchant RevertId",
                     "model":"merchantRevertId",
                     "placeholder":"MerchantRevertId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"paymentId",
                     "inputType":"number",
                     "label":"PaymentId",
                     "model":"paymentId",
                     "placeholder":"PaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 10 charachters required",
                     "id":"requestedAt",
                     "inputType":"text",
                     "label":"RequestedAt",
                     "model":"requestedAt",
                     "placeholder":"RequestedAt",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":10,
                           "max":10
                        },
                        "type":"length"
                     }
                  }
               ]
            },
            "model3":{
               "question":"I should not be able to revert a payment authorization after the payment is captured for amount less than merchant's threshold value",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 999,999 charachters required",
                     "id":"merchantRevertId",
                     "inputType":"text",
                     "label":"Merchant RevertId",
                     "model":"merchantRevertId",
                     "placeholder":"MerchantRevertId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"paymentId",
                     "inputType":"number",
                     "label":"PaymentId",
                     "model":"paymentId",
                     "placeholder":"PaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 10 charachters required",
                     "id":"requestedAt",
                     "inputType":"text",
                     "label":"RequestedAt",
                     "model":"requestedAt",
                     "placeholder":"RequestedAt",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":10,
                           "max":10
                        },
                        "type":"length"
                     }
                  }
               ]
            },
            "model4":{
               "question":"I should not be able to revert a payment authorization after the payment is captured for amount higher than merchant's threshold value",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 999,999 charachters required",
                     "id":"merchantRevertId",
                     "inputType":"text",
                     "label":"Merchant RevertId",
                     "model":"merchantRevertId",
                     "placeholder":"MerchantRevertId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"paymentId",
                     "inputType":"number",
                     "label":"PaymentId",
                     "model":"paymentId",
                     "placeholder":"PaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 10 charachters required",
                     "id":"requestedAt",
                     "inputType":"text",
                     "label":"RequestedAt",
                     "model":"requestedAt",
                     "placeholder":"RequestedAt",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":10,
                           "max":10
                        },
                        "type":"length"
                     }
                  }
               ]
            },
            "model5":{
               "question":"I should be able to see error while accessing API with incorrect token",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 999,999 charachters required",
                     "id":"merchantRevertId",
                     "inputType":"text",
                     "label":"Merchant RevertId",
                     "model":"merchantRevertId",
                     "placeholder":"MerchantRevertId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"paymentId",
                     "inputType":"number",
                     "label":"PaymentId",
                     "model":"paymentId",
                     "placeholder":"PaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 10 charachters required",
                     "id":"requestedAt",
                     "inputType":"text",
                     "label":"RequestedAt",
                     "model":"requestedAt",
                     "placeholder":"RequestedAt",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":10,
                           "max":10
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_radio",
                     "group":[
                        {
                           "label":"True",
                           "value":true
                        },
                        {
                           "label":"False",
                           "value":false
                        }
                     ],
                     "hint":"",
                     "id":"isAuthorzation",
                     "inputType":"radio",
                     "label":"Authorzation",
                     "model":"isAuthorzation",
                     "placeholder":"",
                     "type":"radio",
                     "validation":{
                        "match":"",
                        "type":""
                     }
                  }
               ]
            }
         }
      },
      {
         "actwatcher":0,
         "endpoints":"/v2/refunds",
         "method":"POST",
         "model":{
            "amount":1000,
            "isAuthorzation":true,
            "merchantRefundId":"",
            "paymentId":"",
            "requestedAt":""
         },
         "name":"pay-postRefunds",
         "response":{
            "model1":{
               
            },
            "model2":{
               
            },
            "model3":{
               
            },
            "model4":{
               
            }
         },
         "sampleInput":{
            "amount":{
               "amount":"number",
               "currency":"JPY"
            },
            "merchantRefundId":"string",
            "paymentId":"string",
            "requestedAt":"number"
         },
         "scenario":{
            "model1":{
               "question":"I should be able to refund a payment once the payment is captured for amount equals to merchant's threshold value",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantRefundId",
                     "inputType":"text",
                     "label":"MerchantRefundId",
                     "model":"merchantRefundId",
                     "placeholder":"MerchantRefundId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 20 charachters required",
                     "id":"paymentId",
                     "inputType":"number",
                     "label":"PaymentId",
                     "model":"paymentId",
                     "placeholder":"PaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Greater than one required",
                     "id":"amount",
                     "inputType":"number",
                     "label":"Amount",
                     "model":"amount",
                     "placeholder":"Amount",
                     "type":"input",
                     "validation":{
                        "match":"^((?!(0))[0-9]{1,10})$",
                        "type":"regex"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 16 charachters required",
                     "id":"requestedAt",
                     "inputType":"text",
                     "label":"RequestedAt",
                     "model":"requestedAt",
                     "placeholder":"RequestedAt",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":16
                        },
                        "type":"length"
                     }
                  }
               ]
            },
            "model2":{
               "question":"I should be able to refund a payment once the payment is captured for amount less than merchant's threshold value",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantRefundId",
                     "inputType":"text",
                     "label":"MerchantRefundId",
                     "model":"merchantRefundId",
                     "placeholder":"MerchantRefundId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 20 charachters required",
                     "id":"paymentId",
                     "inputType":"number",
                     "label":"PaymentId",
                     "model":"paymentId",
                     "placeholder":"PaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Greater than one required",
                     "id":"amount",
                     "inputType":"number",
                     "label":"Amount",
                     "model":"amount",
                     "placeholder":"Amount",
                     "type":"input",
                     "validation":{
                        "match":"^((?!(0))[0-9]{1,10})$",
                        "type":"regex"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 16 charachters required",
                     "id":"requestedAt",
                     "inputType":"text",
                     "label":"RequestedAt",
                     "model":"requestedAt",
                     "placeholder":"RequestedAt",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":16
                        },
                        "type":"length"
                     }
                  }
               ]
            },
            "model3":{
               "question":"I should be able to refund a payment once the payment is captured for amount higher than merchant's threshold value",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantRefundId",
                     "inputType":"text",
                     "label":"MerchantRefundId",
                     "model":"merchantRefundId",
                     "placeholder":"MerchantRefundId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 20 charachters required",
                     "id":"paymentId",
                     "inputType":"number",
                     "label":"PaymentId",
                     "model":"paymentId",
                     "placeholder":"PaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Greater than one required",
                     "id":"amount",
                     "inputType":"number",
                     "label":"Amount",
                     "model":"amount",
                     "placeholder":"Amount",
                     "type":"input",
                     "validation":{
                        "match":"^((?!(0))[0-9]{1,10})$",
                        "type":"regex"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 16 charachters required",
                     "id":"requestedAt",
                     "inputType":"text",
                     "label":"RequestedAt",
                     "model":"requestedAt",
                     "placeholder":"RequestedAt",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":16
                        },
                        "type":"length"
                     }
                  }
               ]
            },
            "model4":{
               "question":"I should not be able to access with incorrect token",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantRefundId",
                     "inputType":"text",
                     "label":"MerchantRefundId",
                     "model":"merchantRefundId",
                     "placeholder":"MerchantRefundId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 20 charachters required",
                     "id":"paymentId",
                     "inputType":"number",
                     "label":"PaymentId",
                     "model":"paymentId",
                     "placeholder":"PaymentId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Greater than one required",
                     "id":"amount",
                     "inputType":"number",
                     "label":"Amount",
                     "model":"amount",
                     "placeholder":"Amount",
                     "type":"input",
                     "validation":{
                        "match":"^((?!(0))[0-9]{1,10})$",
                        "type":"regex"
                     }
                  },
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 16 charachters required",
                     "id":"requestedAt",
                     "inputType":"text",
                     "label":"RequestedAt",
                     "model":"requestedAt",
                     "placeholder":"RequestedAt",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":16
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_radio",
                     "group":[
                        {
                           "label":"True",
                           "value":true
                        },
                        {
                           "label":"False",
                           "value":false
                        }
                     ],
                     "hint":"",
                     "id":"isAuthorzation",
                     "inputType":"radio",
                     "label":"Authorzation",
                     "model":"isAuthorzation",
                     "placeholder":"",
                     "type":"radio",
                     "validation":{
                        "match":"",
                        "type":""
                     }
                  }
               ]
            }
         }
      },
      {
         "actwatcher":0,
         "endpoints":"/v2/refunds/{merchantRefundId}",
         "method":"GET",
         "model":{
            "isAuthorzation":true,
            "merchantRefundId":""
         },
         "name":"pay-getRefunds",
         "response":{
            "model1":{
               
            },
            "model2":{
               
            }
         },
         "sampleInput":{
            "merchantRefundId":"string"
         },
         "scenario":{
            "model1":{
               "question":"I should be able to make V2 online payments and should get the refund details",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantRefundId",
                     "inputType":"text",
                     "label":"MerchantRefundId",
                     "model":"merchantRefundId",
                     "placeholder":"MerchantRefundId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  }
               ]
            },
            "model2":{
               "question":"I should not be able to access with incorrect token",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Minimum 50 charachters required",
                     "id":"merchantRefundId",
                     "inputType":"text",
                     "label":"MerchantRefundId",
                     "model":"merchantRefundId",
                     "placeholder":"MerchantRefundId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_radio",
                     "group":[
                        {
                           "label":"True",
                           "value":true
                        },
                        {
                           "label":"False",
                           "value":false
                        }
                     ],
                     "hint":"",
                     "id":"isAuthorzation",
                     "inputType":"radio",
                     "label":"Authorzation",
                     "model":"isAuthorzation",
                     "placeholder":"",
                     "type":"radio",
                     "validation":{
                        "match":"",
                        "type":""
                     }
                  }
               ]
            }
         }
      },
      {
         "actwatcher":0,
         "endpoints":"/v2/user/authorizations?userAuthorizationId",
         "method":"GET",
         "model":{
            "isAuthorzation":true,
            "userAuthorizationId":""
         },
         "name":"pay-getAuthorizationsUser",
         "response":{
            "model1":{
               
            },
            "model2":{
               
            }
         },
         "sampleInput":{
            "userAuthorizationId":"string"
         },
         "scenario":{
            "model1":{
               "question":"I should be able to get user authorization status",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Maximum 64 characters  allowed",
                     "id":"userAuthorizationId",
                     "inputType":"text",
                     "label":"UserAuthorizationId",
                     "model":"userAuthorizationId",
                     "placeholder":"UserAuthorizationId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  }
               ]
            },
            "model2":{
               "question":"I should not be able to access with incorrect token",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Maximum 64 characters  allowed",
                     "id":"userAuthorizationId",
                     "inputType":"text",
                     "label":"UserAuthorizationId",
                     "model":"userAuthorizationId",
                     "placeholder":"UserAuthorizationId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  },
                  {
                     "fmClass":"irq_radio",
                     "group":[
                        {
                           "label":"True",
                           "value":true
                        },
                        {
                           "label":"False",
                           "value":false
                        }
                     ],
                     "hint":"",
                     "id":"isAuthorzation",
                     "inputType":"radio",
                     "label":"Authorization",
                     "model":"isAuthorzation",
                     "placeholder":"",
                     "type":"radio",
                     "validation":{
                        "match":"",
                        "type":""
                     }
                  }
               ]
            }
         }
      },
      {
         "actwatcher":0,
         "endpoints":"/v2/user/profile/secure?userAuthorizationId",
         "method":"GET",
         "model":{
            "userAuthorizationId":""
         },
         "name":"pay-getSecureProfileUser",
         "response":{
            "model1":{
               
            }
         },
         "sampleInput":{
            "userAuthorizationId":"string"
         },
         "scenario":{
            "model1":{
               "question":"I should be able to get the masked phone number of the user",
               "schema":[
                  {
                     "fmClass":"irq_inputs",
                     "hint":"Maximum 64 characters  allowed",
                     "id":"userAuthorizationId",
                     "inputType":"text",
                     "label":"UserAuthorizationId",
                     "model":"userAuthorizationId",
                     "placeholder":"UserAuthorizationId",
                     "type":"input",
                     "validation":{
                        "match":{
                           "min":50
                        },
                        "type":"length"
                     }
                  }
               ]
            }
         }
      }
   ]
}
